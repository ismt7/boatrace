generator client {
  provider      = "prisma-client-js"
  output        = "../app/lib/prisma"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Stadium {
  id        Int      @id @default(autoincrement())
  jcd       Int
  course    Int
  first     Float
  second    Float
  third     Float
  fourth    Float
  fifth     Float
  sixth     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([jcd, course])
}

model Race {
  id         Int      @id @default(autoincrement())
  jcd        Int
  raceDate   String
  raceNumber Int
  raceTime   String
  isFinished Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([jcd, raceDate, raceNumber])
}

model Odds {
  id          Int      @id @default(autoincrement())
  jcd         Int
  raceDate    String
  raceNumber  Int
  oddsType    Int      // 1: 2連単, 2: 3連単
  firstPlace  Int      // 1着の艇番号
  secondPlace Int      // 2着の艇番号
  thirdPlace  Int?     // 3着の艇番号（2連単の場合はnull）
  oddsValue   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([jcd, raceDate, raceNumber, oddsType, firstPlace, secondPlace, thirdPlace])
}

model RaceResult {
  id           Int      @id @default(autoincrement())
  jcd          Int
  raceDate     String
  raceNumber   Int
  raceType     String   // レース種別
  winType      String   // 勝式
  firstPlace   Int      // 1着の艇番号
  secondPlace  Int      // 2着の艇番号
  thirdPlace   Int      // 3着の艇番号
  fourthPlace  Int      // 4着の艇番号
  fifthPlace   Int      // 5着の艇番号
  sixthPlace   Int      // 6着の艇番号
  firstRacer   String   // 1着の選手名
  secondRacer  String   // 2着の選手名
  thirdRacer   String   // 3着の選手名
  fourthRacer  String   // 4着の選手名
  fifthRacer   String   // 5着の選手名
  sixthRacer   String   // 6着の選手名
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([jcd, raceDate, raceNumber])
}

model CourseResult {
  id            Int    @id @default(autoincrement())
  jcd           Int
  raceDate      String
  orderOfFinish Int
  firstCourse   Float
  secondCourse  Float
  thirdCourse   Float
  fourthCourse  Float
  fifthCourse   Float
  sixthCourse   Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([jcd, raceDate, orderOfFinish])
}

model BoatResult {
  id           Int      @id @default(autoincrement())
  jcd          Int
  raceDate     String
  orderOfFinish Int
  firstBoat    Float
  secondBoat   Float
  thirdBoat    Float
  fourthBoat   Float
  fifthBoat    Float
  sixthBoat    Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([jcd, raceDate, orderOfFinish])
}

model Payout {
  id              Int      @id @default(autoincrement())
  jcd             Int
  raceDate        String
  raceNumber      Int
  firstPlace      Int      // 1着の艇番号
  secondPlace     Int      // 2着の艇番号
  thirdPlace      Int      // 3着の艇番号
  trifectaPayout  Float
  exactaPayout    Float
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@unique([jcd, raceDate, raceNumber])
}

model Motor {
  id                    Int      @id @default(autoincrement())
  toban                 Int
  motorNumber           Int
  quinellaPairRate      Float
  preRaceInspectionTime Float

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@unique([toban, motorNumber])
}
